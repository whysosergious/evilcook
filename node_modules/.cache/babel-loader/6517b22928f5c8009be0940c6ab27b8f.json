{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\webWork\\\\evilcook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport { useEffect, useRef } from 'react';\nimport './App.css';\nimport './AppGeneral.css';\nimport './animation.css';\nimport { Redirect, Route, BrowserRouter as Router } from \"react-router-dom\"; // zergski logic\n\nimport { useGlobalObj, globalObj, createObserver, queueFrame } from 'zergski-global';\nimport 'logic/zergski-content-manager';\nimport { routerHook, useRouterHook } from 'logic/router';\nimport Home from 'Pages/Home'; // Page Sections\n\nimport LandingContainer from './Landing/Container';\nimport DoormatContainer from './Doormat/Container';\nimport NewsContainer from './News/Container';\nimport GalleryContainer from './Gallery/Container';\nimport MenuContainer from './Menu/Container';\nimport AboutContainer from './About/Container';\nimport ContactContainer from './Contact/Container';\nimport FooterContainer from './Footer/Container'; // Routed pages\n\nimport GalleryPage from 'Pages/Gallery/Container'; // Modals\n\nimport MediaViewer from 'modals/MediaViewer';\nimport ModalWindow from 'modals/Window'; // components\n\nimport Button from 'shared/Button';\nimport Anchor from 'shared/Anchor'; // zergski content manager\n// copying files before processing \n\nconst copycat = 'http://localhost/brokenOt/evilcook/src/fs/cat.php'; // just some tools..\n\nconst z = {\n  console: true,\n  display: false,\n\n  log(a, b, c, d, e, f) {\n    if (console) {// console.log(a,b,c,d,e,f);\n    }\n  }\n\n}; // const _evilcook = {\n// TEMP\n\nconst _evilcook = {\n  /**\n   * @param {boolean} [ log ] : well, display the console log ofcourse \n   * <p>  \n   * @param {string , null} [ baseUrl ] : set if you have defined a 'baseUrl' in your jsconfig.json. setting to 'src is very handy, is recommended and will simply remove all './' from imports. null will replace them with '../' and is the simplest solution. if a custom 'url' is set, keep in mind to define the child directory ( i.e if set to 'src', but all your imports go through 'src/components', set baseUrl to 'components'.)\n   * </p>\n   */\n  components: {\n    loaded: {\n      index: '.js'\n    },\n    collection: [],\n    count: 0\n  },\n  options: {\n    log: true,\n    baseUrl: 'src'\n  }\n};\nconst {\n  baseUrl\n} = _evilcook.options;\n_evilcook.options.importPath = baseUrl === 'src' ? \"'\" : baseUrl === null ? \"'../\" : `'${baseUrl}/`;\nwindow.cook = _evilcook;\n/**\n * We make copies of all imported and used components\n * @param {Array} list \n */\n\nasync function _zcmStart(list) {\n  console.log(list);\n  const response = await fetch(copycat, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(list)\n  });\n  const {\n    log,\n    content\n  } = await response.json();\n  _evilcook.options.log && log.forEach(entry => console.log(entry));\n  content.forEach((component, index) => {\n    _evilcook.components.collection.push(component);\n\n    _evilcook.components.count++;\n\n    _processComponent(content, component, index);\n  });\n}\n\nasync function _saveData() {\n  console.log(_evilcook.collection);\n  const response = await fetch('http://localhost/brokenOt/fw.php', {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(_evilcook.components.collection)\n  });\n  const data = await response.text();\n  console.log(data);\n} // setTimeout(()=> {\n// \t_saveData();\n// \tconsole.log('saved');\n// }, 1000);\n\n\nasync function _processComponent(content, component, index) {\n  var _rawComponent$match, _rawComponent$match2;\n\n  let {\n    importPath\n  } = _evilcook.options;\n  let {\n    rawComponent\n  } = content[index].data;\n  let {\n    loaded\n  } = _evilcook.components; // just tested by removing comments\n\n  z.log(rawComponent);\n  rawComponent = rawComponent.replace(/\\B{\\/\\*\\B[\\s\\S]*\\B\\*\\/}\\B/g, '');\n  rawComponent = rawComponent.replace(/\\B\\/\\/.*\\n/g, '');\n  let matches = (_rawComponent$match = rawComponent.match(/\\B<[A-Z].*\\/>\\B/g)) === null || _rawComponent$match === void 0 ? void 0 : _rawComponent$match.map(res => res.replace(/<|\\s+|\\/+|>+/g, ''));\n  let routes = (_rawComponent$match2 = rawComponent.match(/\\B<Route.*\\/>\\B/g)) === null || _rawComponent$match2 === void 0 ? void 0 : _rawComponent$match2.map(res => {\n    return res.replace(/^.+{ | }.+$/g, '');\n  });\n  let imports = rawComponent.split('import');\n  let body = imports.pop(); // let variables = splitByVariables(body);\n\n  let componentPath = [];\n  matches || (matches = [matches]);\n  let keys = [];\n\n  if (routes) {\n    keys = [...routes, ...keys];\n  }\n\n  if (matches[0]) {\n    let check = [];\n    matches.forEach(match => {\n      if (match !== undefined) {\n        if (loaded[match] === match) {\n          z.log(match, 'already processed');\n        } else {\n          check.push(match);\n        }\n      }\n    });\n    check[0] && (keys = [...check, ...keys]);\n  } // if ( variables ) {\n  // \tkeys = [ ...variables, ...keys ];\n  // } \n\n\n  imports.forEach(line => {\n    var _keys;\n\n    return (_keys = keys) === null || _keys === void 0 ? void 0 : _keys.forEach(key => {\n      if (line.includes(key)) {\n        loaded[key] = key;\n        componentPath.push(line.match(/'.+'|\".+\"/g)[0].replace(/\\.+|\"+|'+/g, '').split('/'));\n      } else {\n        return;\n      }\n    });\n  });\n  Polly.catArray = [];\n  filePath = {};\n  componentPath.forEach(c => {\n    var _loaded$c$;\n\n    if ((_loaded$c$ = loaded[c[0]]) === null || _loaded$c$ === void 0 ? void 0 : _loaded$c$.includes(c[1])) {\n      console.log(c[1], 'repeated');\n    } else {\n      console.log(c);\n      c[0] === '' && c.shift();\n      filePath = {\n        file: c.pop(),\n        path: c.join('/') === '' ? 'root' : c.join('/')\n      };\n      Polly.catArray.push(filePath);\n    }\n  });\n  /**\n   * Now to elements.\n   */\n\n  const staticComponents = ['Map', 'root', 'modals'];\n\n  if (!staticComponents.includes(component.data.path)) {\n    let wrapper,\n        images = [];\n    wrapper = rawComponent.match(/\\B<section*[\\s\\S]*section>\\B/g) || rawComponent.match(/\\B<div*[\\s\\S]*div>\\B/g) || [];\n    let elements = {};\n    const regexp = [// /(\\B<section\\b[\\s\\S]+?\\bsection>\\B)/g,\n    /(\\B<div\\b[\\s\\S]+?\\bdiv>\\B)/g, /(\\B<h1\\b[\\s\\S]+?\\bh1>\\B)/g, /(\\B<h2\\b[\\s\\S]+?\\bh2>\\B)/g, /(\\B<h3\\b[\\s\\S]+?\\bh3>\\B)/g, /(\\B<h4\\b[\\s\\S]+?\\bh4>\\B)/g, /(\\B<h5\\b[\\s\\S]+?\\bh5>\\B)/g, // /(\\B<a\\b[\\s\\S]+?\\ba>\\B)/g,\n    // /(\\B<button\\b[\\s\\S]+?\\bbutton>\\B)/g,\n    /(\\B<Button\\b[\\s\\S]+?\\B\\/>\\B)/g, // /(\\B<img\\b[\\s\\S]+?\\bimg>\\B)/g,\n    /(\\B<nav\\b[\\s\\S]+?\\bnav>\\B)/g, /(\\B<span\\b[\\s\\S]+?\\bspan>\\B)/g];\n    let childCount = 0;\n\n    const parseHtmlString = (nodes = {}) => {\n      let childNodes = {\n        [nodes.match(/\\b[a-z].*\\b/g)]: nodes.match(regexp[childCount++])\n      };\n      console.log(childNodes);\n      parseHtmlString(childNodes);\n    };\n\n    parseHtmlString(rawComponent); // if ( wrapper ) {\n    // \tlet imgWrapper = wrapper[0]?.match(/\\B<ImageWrapper\\b[\\s\\S]*?\\B\\/>\\B/g);\n    // \t// console.log(imgWrapper);\n    // \timages = getImageData( imgWrapper, rawComponent );\n    // \tconsole.log(images);\n    // \t// wrapper  =\twrapper[0]?.match(/\\b(className={)*\\B}\\B/g);\n    // }\n    // const childNodes = await wrapper[0]?.match(regexp)];\n    // const childNodes = [...wrapper[0]?.matchAll(/(\\B<div\\b[\\s\\S]+?\\bdiv>\\B)|(\\B<h1\\b[\\s\\S]+?\\bh1>\\B)|(\\B<h2\\b[\\s\\S]+?\\bh2>\\B)|(\\B<h3\\b[\\s\\S]+?\\bh3>\\B)|(\\B<h4\\b[\\s\\S]+?\\bh4>\\B)|(\\B<h5\\b[\\s\\S]+?\\bh5>\\B/g)];\n    // console.log(Array.from(childNodes))\n    // Object.entries(regexp).forEach( ( item, index, arr ) => {\n    // console.log(wrapper[0]?.match(regexp[0].div));\n\n    if (wrapper) {\n      var _wrapper$, _wrapper$2, _wrapper$3;\n\n      let sorter = (_wrapper$ = wrapper[0]) === null || _wrapper$ === void 0 ? void 0 : _wrapper$.match(regexp[0]); // console.log(sorter);\n\n      let struct = [];\n      sorter === null || sorter === void 0 ? void 0 : sorter.forEach(node => {\n        let title = node.match(/\\b[a-z].+\\b/)[0];\n        let container = {};\n        let childArray = []; // console.log(node);\n\n        for (let i = 1; i < regexp.length; i++) {\n          // let regexTag = Object.keys(regexp)[i];\n          let nodes = node.match(regexp[i]);\n          let children = [];\n          nodes === null || nodes === void 0 ? void 0 : nodes.forEach(n => {\n            let obj = {\n              [n.match(/\\b[a-z].*\\b/g)]: n\n            }; // console.log(obj, n);\n\n            children.push(obj);\n          }); // let childTitle = node.match(regexp[i])\n\n          childArray.push(...children);\n        }\n\n        container = {\n          [title]: {\n            element: node,\n            childNodes: { ...childArray\n            }\n          }\n        };\n        struct.push(container);\n      });\n      elements = {\n        [(_wrapper$2 = wrapper[0]) === null || _wrapper$2 === void 0 ? void 0 : _wrapper$2.match(/\\b[a-z].*\\b/g)]: {\n          element: (_wrapper$3 = wrapper[0]) === null || _wrapper$3 === void 0 ? void 0 : _wrapper$3.match(/\\B<div*[\\s\\S]*div>\\B/g)[0],\n          children: { ...struct\n          }\n        }\n      };\n      component.data.children = { ...elements\n      };\n    } // if ( images ) {\n    // \timages = [ ...images ];\n    // }\n    // console.log(...wrapper);\n\n  }\n\n  Polly.catArray[0] && _zcmStart(Polly);\n}\n\nfunction getImageData(imageNodes, rawComponent) {\n  let result = [];\n  imageNodes.forEach(node => {\n    let srcVar = node.match(/\\b(imgSrc={).*?}\\B/g)[0].replace(/(imgSrc={)|\\B}.*/g, '').trim();\n    let srcVarRegex = '/.*_VARIABLE_.*/g';\n    srcVarRegex = srcVarRegex.replace('_VARIABLE_', srcVar);\n    let source = rawComponent.match(srcVarRegex)[0].match(/\\B['\\\\\"][\\s\\S].*['\\\\\"]\\B/g)[0];\n    let description = node.match(/\\b(imgDesc=).*/g)[0].replace(/\\b(imgDesc=)/g, '');\n    let image = {\n      source,\n      description\n    };\n    result.push(image);\n  });\n  return result;\n}\n\nfunction splitByVariables(source) {\n  var splitters = ['const', 'let', 'var'];\n  splitters.push([source]);\n  return splitters.reduceRight(function (accumulator, curValue) {\n    var k = [];\n    accumulator.forEach(v => k = [...k, ...v.split(curValue)]);\n    return k;\n  });\n} // we start with index.js\n\n\nlet filePath = {};\nlet Polly = {\n  catArray: [{\n    file: 'index',\n    path: 'root'\n  }]\n};\n\n_zcmStart(Polly);\n/**\n * Assigned handler with a properties object\n * TODO!: Document props passed to this function and\n * send all of them separately\n * @param {*} props\n */\n\n\nconst handleNavigation = ({\n  entry,\n  observer\n}) => {\n  if (entry.target.zKey === 'Nav' && entry.isIntersecting) {\n    globalObj.Sections.Nav.setState({\n      sticky: 'stuck'\n    });\n  } else if (entry.target.zKey === 'Nav' && !entry.isIntersecting) {\n    globalObj.Sections.Nav.setState({\n      sticky: ''\n    });\n  }\n};\n\nconst handleViewportAnimated = ({\n  entry,\n  observer,\n  prevRatio\n}) => {\n  // console.log(entry.target.zKey, entry.isIntersecting)\n  if (entry.isIntersecting) {\n    queueFrame(() => {\n      entry.target.zEl.setState('');\n    });\n    observer.unobserve(entry.target);\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [route] = useRouterHook(null);\n  const main = {\n    root: useRef(null),\n    ref: useRef(null)\n  };\n  useEffect(() => {\n    // for the global object to be accessible through import, it has to be initialized\n    // after a 'componentDidMount' or 'useEffect' in that component\n    const {\n      Sections,\n      ViewportAnimated\n    } = globalObj;\n    globalObj.Sections.Nav.current = 0;\n    main.ref = main.ref.current;\n    main.root = main.ref.parentElement;\n    globalObj.main = main; // all you need to create an intersectionObserver\n    // a reference of to the observer, in our case\n    // the root element\n\n    createObserver('ViewportAnimation', main.root, // observer\n    Object.values(ViewportAnimated).map(e => {\n      return e.ref;\n    }), handleViewportAnimated, // callback function\n    ['-20% 0px -20% 0px'], 1);\n    createObserver('Navigation', main.root, // observer\n    Sections.Nav.ref, handleNavigation, // callback function\n    ['0px 0px -99% 0px'], 1); // window.onclick = e => {\n    // \tconsole.log(e.target);\n    // \tconsole.log(e.target.inerHtml)\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    ref: main.ref,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [route ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: route\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 13\n      }, this) : '', /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/gallery\",\n        component: GalleryPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 4\n  }, this);\n};\n\n_s(App, \"k9i5lRjd7j/W46QiWGg1m8jA2S8=\", false, function () {\n  return [useRouterHook];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/webWork/evilcook/src/App.js"],"names":["useEffect","useRef","Redirect","Route","BrowserRouter","Router","useGlobalObj","globalObj","createObserver","queueFrame","routerHook","useRouterHook","Home","LandingContainer","DoormatContainer","NewsContainer","GalleryContainer","MenuContainer","AboutContainer","ContactContainer","FooterContainer","GalleryPage","MediaViewer","ModalWindow","Button","Anchor","copycat","z","console","display","log","a","b","c","d","e","f","_evilcook","components","loaded","index","collection","count","options","baseUrl","importPath","window","cook","_zcmStart","list","response","fetch","method","headers","body","JSON","stringify","content","json","forEach","entry","component","push","_processComponent","_saveData","data","text","rawComponent","replace","matches","match","map","res","routes","imports","split","pop","componentPath","keys","check","undefined","line","key","includes","Polly","catArray","filePath","shift","file","path","join","staticComponents","wrapper","images","elements","regexp","childCount","parseHtmlString","nodes","childNodes","sorter","struct","node","title","container","childArray","i","length","children","n","obj","element","getImageData","imageNodes","result","srcVar","trim","srcVarRegex","source","description","image","splitByVariables","splitters","reduceRight","accumulator","curValue","k","v","handleNavigation","observer","target","zKey","isIntersecting","Sections","Nav","setState","sticky","handleViewportAnimated","prevRatio","zEl","unobserve","App","route","main","root","ref","ViewportAnimated","current","parentElement","Object","values"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport { useEffect, useRef } from 'react';\nimport './App.css';\nimport './AppGeneral.css';\nimport './animation.css';\nimport { Redirect, Route, BrowserRouter as Router } from \"react-router-dom\";\n\n// zergski logic\nimport { useGlobalObj, globalObj, createObserver, queueFrame } from 'zergski-global';\nimport 'logic/zergski-content-manager';\nimport { routerHook, useRouterHook } from 'logic/router';\n\nimport Home from 'Pages/Home';\n\n\n// Page Sections\nimport LandingContainer from './Landing/Container';\nimport DoormatContainer from './Doormat/Container';\nimport NewsContainer from './News/Container';\nimport GalleryContainer from './Gallery/Container';\nimport MenuContainer from './Menu/Container';\nimport AboutContainer from './About/Container';\nimport ContactContainer from './Contact/Container';\nimport FooterContainer from './Footer/Container';\n\n// Routed pages\nimport GalleryPage from 'Pages/Gallery/Container';\n\n// Modals\nimport MediaViewer from 'modals/MediaViewer';\nimport ModalWindow from 'modals/Window';\n\n// components\nimport Button from 'shared/Button';\nimport Anchor from 'shared/Anchor';\n\n\n// zergski content manager\n// copying files before processing \nconst copycat = 'http://localhost/brokenOt/evilcook/src/fs/cat.php';\n\n\n// just some tools..\nconst z = {\n\tconsole: true,\n\tdisplay: false,\n\tlog (a,b,c,d,e,f) {\n\n\t\tif ( console ) {\n\t\t\t// console.log(a,b,c,d,e,f);\n\t\t}\n\t},\n}\n\n\n// const _evilcook = {\n// TEMP\nconst _evilcook = {\n\t/**\n\t * @param {boolean} [ log ] : well, display the console log ofcourse \n\t * <p>  \n\t * @param {string , null} [ baseUrl ] : set if you have defined a 'baseUrl' in your jsconfig.json. setting to 'src is very handy, is recommended and will simply remove all './' from imports. null will replace them with '../' and is the simplest solution. if a custom 'url' is set, keep in mind to define the child directory ( i.e if set to 'src', but all your imports go through 'src/components', set baseUrl to 'components'.)\n\t * </p>\n\t */\n\tcomponents: {\n\t\tloaded: {\n\t\t\tindex: '.js',\n\t\t},\n\t\tcollection: [],\n\t\tcount: 0,\n\t},\n\toptions: {\n\t\tlog: true,\n\t\tbaseUrl: 'src',\n\t},\n}\nconst { baseUrl } = _evilcook.options;\n_evilcook.options.importPath = baseUrl === 'src' ? \"'\" : baseUrl === null ? \"'../\" : `'${baseUrl}/` ;\n\nwindow.cook = _evilcook;\n\n/**\n * We make copies of all imported and used components\n * @param {Array} list \n */\nasync function _zcmStart( list ) {\n\tconsole.log(list);\n\tconst response = await fetch(\n\t\tcopycat,\n\t\t{\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(list),\n\t\t}\n\t);\n\tconst { log, content } = await response.json();\n\n\t_evilcook.options.log && log.forEach( entry => console.log(entry));\n\t\n\tcontent.forEach( ( component, index ) => {\n\t\t_evilcook.components.collection.push(component);\n\t\t_evilcook.components.count++;\n\t\t\n\t\t_processComponent( content, component, index );\n\t});\n}\n\n\nasync function _saveData() {\n\tconsole.log(_evilcook.collection);\n\tconst response = await fetch(\n\t\t'http://localhost/brokenOt/fw.php',\n\t\t{\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t    'Content-Type': 'application/json',\n\t\t\t\t  },\n\t\t\tbody: JSON.stringify(_evilcook.components.collection),\n\t\t}\n\t);\n\n\tconst data = await response.text();\n\n\tconsole.log(data);\n\n}\n// setTimeout(()=> {\n// \t_saveData();\n// \tconsole.log('saved');\n// }, 1000);\n\nasync function _processComponent ( content, component, index ) {\n\tlet { importPath } = _evilcook.options;\n\tlet { rawComponent } = content[index].data;\n\tlet { loaded } = _evilcook.components;\n\n\n\t// just tested by removing comments\n\tz.log(rawComponent);\n\trawComponent = rawComponent.replace(/\\B{\\/\\*\\B[\\s\\S]*\\B\\*\\/}\\B/g, '');\n\trawComponent = rawComponent.replace(/\\B\\/\\/.*\\n/g, '');\n\n\n\tlet matches = rawComponent.match(/\\B<[A-Z].*\\/>\\B/g)?.map( res => res.replace(/<|\\s+|\\/+|>+/g, ''));\n\t\n\tlet routes = rawComponent.match(/\\B<Route.*\\/>\\B/g)?.map( res => { return res.replace(/^.+{ | }.+$/g, '') });\n\tlet imports = rawComponent.split('import');\n\tlet body = imports.pop();\n\t// let variables = splitByVariables(body);\n\tlet componentPath = [];\n\tmatches || ( matches = [matches] );\n\tlet keys = [];\n\tif ( routes ) {\n\t\tkeys = [ ...routes, ...keys ];\n\t}\n\tif ( matches[0] ) {\n\t\tlet check = [];\n\t\tmatches.forEach( match => {\n\t\t\tif ( match !== undefined ) {\n\t\t\t\tif ( loaded[ match ] === match ) {\n\t\t\t\t\tz.log( match, 'already processed' );\n\t\t\t\t} else {\n\t\t\t\t\tcheck.push( match );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tcheck[0] && ( keys = [ ...check, ...keys ] );\n\t}\n\t// if ( variables ) {\n\t// \tkeys = [ ...variables, ...keys ];\n\t// } \n\n\n\n\timports.forEach( line =>\n\t\tkeys?.forEach( key => {\n\n\t\t\tif ( line.includes(key) ) {\n\t\t\t\tloaded[ key ] = key;\n\t\t\t\tcomponentPath.push( line.match(/'.+'|\".+\"/g)[0].replace(/\\.+|\"+|'+/g, '').split('/') );\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t}));\n\n\tPolly.catArray = [];\n\tfilePath = {};\n\tcomponentPath.forEach( c => {\n\t\tif ( loaded[ c[0] ]?.includes(c[1]) ) {\n\t\t\tconsole.log( c[1], 'repeated');\n\t\t} else {\n\t\t\tconsole.log(c);\n\t\t\tc[0] === '' && c.shift();\n\t\t\tfilePath = { file: c.pop(), path: c.join('/') === '' ? 'root' : c.join('/') }\n\t\t\tPolly.catArray.push( filePath );\n\t\t}\n\t})\n\n\n\n\t/**\n\t * Now to elements.\n\t */\n\tconst staticComponents = [ 'Map', 'root', 'modals' ];\n\n\tif ( !staticComponents.includes(component.data.path) ) {\n\n\t\tlet wrapper, images = [];\n\n\t\twrapper = rawComponent.match(/\\B<section*[\\s\\S]*section>\\B/g) || rawComponent.match(/\\B<div*[\\s\\S]*div>\\B/g) || [];\n\t\tlet elements = {};\n\n\n\t\tconst regexp = [\n\t\t\t// /(\\B<section\\b[\\s\\S]+?\\bsection>\\B)/g,\n\t\t\t/(\\B<div\\b[\\s\\S]+?\\bdiv>\\B)/g, \n\t\t\t/(\\B<h1\\b[\\s\\S]+?\\bh1>\\B)/g, \n\t\t\t/(\\B<h2\\b[\\s\\S]+?\\bh2>\\B)/g, \n\t\t\t/(\\B<h3\\b[\\s\\S]+?\\bh3>\\B)/g, \n\t\t\t/(\\B<h4\\b[\\s\\S]+?\\bh4>\\B)/g, \n\t\t\t/(\\B<h5\\b[\\s\\S]+?\\bh5>\\B)/g,\n\t\t\t// /(\\B<a\\b[\\s\\S]+?\\ba>\\B)/g,\n\t\t\t// /(\\B<button\\b[\\s\\S]+?\\bbutton>\\B)/g,\n\t\t\t/(\\B<Button\\b[\\s\\S]+?\\B\\/>\\B)/g,\n\t\t\t// /(\\B<img\\b[\\s\\S]+?\\bimg>\\B)/g,\n\t\t\t/(\\B<nav\\b[\\s\\S]+?\\bnav>\\B)/g,\n\t\t\t/(\\B<span\\b[\\s\\S]+?\\bspan>\\B)/g,\n\n\t\t]\n\n\n\t\tlet childCount = 0;\n\t\tconst parseHtmlString = ( nodes={} ) => {\n\t\t\tlet childNodes = { \n\t\t\t\t[ nodes.match(/\\b[a-z].*\\b/g) ] : nodes.match( regexp[childCount++] ),\n\t\t\t};\n\t\t\tconsole.log(childNodes);\n\t\t\tparseHtmlString( childNodes );\n\t\t}\n\t\tparseHtmlString( rawComponent );\n\n\n\t\t// if ( wrapper ) {\n\t\t// \tlet imgWrapper = wrapper[0]?.match(/\\B<ImageWrapper\\b[\\s\\S]*?\\B\\/>\\B/g);\n\t\t// \t// console.log(imgWrapper);\n\t\t// \timages = getImageData( imgWrapper, rawComponent );\n\t\t// \tconsole.log(images);\n\t\t// \t// wrapper  =\twrapper[0]?.match(/\\b(className={)*\\B}\\B/g);\n\t\t// }\n\n\t\t// const childNodes = await wrapper[0]?.match(regexp)];\n\n\t\t// const childNodes = [...wrapper[0]?.matchAll(/(\\B<div\\b[\\s\\S]+?\\bdiv>\\B)|(\\B<h1\\b[\\s\\S]+?\\bh1>\\B)|(\\B<h2\\b[\\s\\S]+?\\bh2>\\B)|(\\B<h3\\b[\\s\\S]+?\\bh3>\\B)|(\\B<h4\\b[\\s\\S]+?\\bh4>\\B)|(\\B<h5\\b[\\s\\S]+?\\bh5>\\B/g)];\n\t\t// console.log(Array.from(childNodes))\n\n\t\t// Object.entries(regexp).forEach( ( item, index, arr ) => {\n\t\t\t// console.log(wrapper[0]?.match(regexp[0].div));\n\t\tif (wrapper) {\n\t\t\tlet sorter = wrapper[0]?.match(regexp[0]);\n\t\t\t// console.log(sorter);\n\t\t\tlet struct = [];\n\t\t\tsorter?.forEach( node => {\n\t\t\t\t\n\t\t\t\tlet title = node.match(/\\b[a-z].+\\b/)[0];\n\t\t\t\tlet container = {};\n\t\t\t\tlet childArray = [];\n\t\t\t\t// console.log(node);\n\t\t\t\tfor ( let i=1; i<regexp.length; i++ ) {\n\t\t\t\t\t// let regexTag = Object.keys(regexp)[i];\n\t\t\t\t\tlet nodes = node.match(regexp[i]);\n\n\t\t\t\t\tlet children = [];\n\t\t\t\t\tnodes?.forEach( n => {\n\t\t\t\t\t\tlet obj = { [n.match(/\\b[a-z].*\\b/g)] : n };\n\t\t\t\t\t\t// console.log(obj, n);\n\t\t\t\t\t\tchildren.push(obj);\n\t\t\t\t\t});\n\t\t\t\t\t// let childTitle = node.match(regexp[i])\n\t\t\t\t\tchildArray.push(...children);\n\t\t\t\t}\n\t\t\t\tcontainer = {\n\t\t\t\t\t[title] : {\n\t\t\t\t\t\telement: node,\n\t\t\t\t\t\tchildNodes: {\n\t\t\t\t\t\t\t...childArray,\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstruct.push(container);\n\t\t\t\t\n\t\t\t});\n\n\t\t\telements = {\n\t\t\t\t[wrapper[0]?.match(/\\b[a-z].*\\b/g)] : {\n\t\t\t\t\telement: wrapper[0]?.match(/\\B<div*[\\s\\S]*div>\\B/g)[0],\n\t\t\t\t\tchildren: {\n\t\t\t\t\t\t...struct,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}\n\n\t\t\tcomponent.data.children = {\n\t\t\t\t...elements,\n\t\t\t}\n\n\t\t}\n\n\t\t// if ( images ) {\n\t\t// \timages = [ ...images ];\n\t\t// }\n\t\t\n\n\t\t// console.log(...wrapper);\n\t}\n\n\n\n\tPolly.catArray[0] && _zcmStart( Polly );\n}\n\nfunction getImageData( imageNodes, rawComponent ) {\n\t\tlet result = [];\n\t\timageNodes.forEach( node => {\n\t\t\tlet srcVar = node.match(/\\b(imgSrc={).*?}\\B/g)[0].replace(/(imgSrc={)|\\B}.*/g, '').trim();\n\t\t\tlet srcVarRegex = '/.*_VARIABLE_.*/g';\n\t\t\tsrcVarRegex = srcVarRegex.replace('_VARIABLE_', srcVar);\n\t\t\tlet source = rawComponent.match(srcVarRegex)[0].match(/\\B['\\\\\"][\\s\\S].*['\\\\\"]\\B/g)[0];\n\t\t\tlet description = node.match(/\\b(imgDesc=).*/g)[0].replace(/\\b(imgDesc=)/g, '');\n\t\t\t\n\t\t\tlet image = {\n\t\t\t\tsource,\n\t\t\t\tdescription,\n\t\t\t}\n\t\t\tresult.push(image);\n\t\t});\n\t\treturn result;\n}\n\nfunction splitByVariables(source) {\n\tvar splitters = [ 'const', 'let', 'var' ];\n  splitters.push([source]);\n\n  return splitters.reduceRight(function(accumulator, curValue) {\n    var k = [];\n    accumulator.forEach(v => k = [...k, ...v.split(curValue)]);\n    return k;\n  });\n}\n\n\n\n\n\n\n// we start with index.js\nlet filePath = {};\nlet Polly = { catArray: [ { file: 'index', path: 'root' }]};\n\n_zcmStart( Polly );\n\n/**\n * Assigned handler with a properties object\n * TODO!: Document props passed to this function and\n * send all of them separately\n * @param {*} props\n */\nconst handleNavigation = ({ entry, observer }) => {\n\tif ( entry.target.zKey === 'Nav' && entry.isIntersecting ) {\n\t\tglobalObj.Sections.Nav.setState({ sticky: 'stuck' });\n\t} else if ( entry.target.zKey === 'Nav' && !entry.isIntersecting ) {\n\t\tglobalObj.Sections.Nav.setState({ sticky: '' });\n\t}\n}\n\nconst handleViewportAnimated = ({ entry, observer, prevRatio }) => {\n\t// console.log(entry.target.zKey, entry.isIntersecting)\n\tif ( entry.isIntersecting ) {\n\t\tqueueFrame(() => {\n\t\t\tentry.target.zEl.setState( '' );\n\t\t});\n\t\tobserver.unobserve( entry.target );\n\t}\n}\n\nconst App = () => {\n\tconst [ route ] = useRouterHook(null);\n\n\tconst main = {\n\t\troot: useRef(null),\n\t\tref: useRef(null),\n\t}\n\n\tuseEffect(() => {\n\t\t// for the global object to be accessible through import, it has to be initialized\n\t\t// after a 'componentDidMount' or 'useEffect' in that component\n\t\tconst { Sections, ViewportAnimated } = globalObj;\n\t\tglobalObj.Sections.Nav.current = 0;\n\t\tmain.ref = main.ref.current;\n\t\tmain.root = main.ref.parentElement;\n\t\tglobalObj.main = main;\n\t\t// all you need to create an intersectionObserver\n\t\t// a reference of to the observer, in our case\n\t\t// the root element\n\t\tcreateObserver (\n\t\t\t'ViewportAnimation',\n\t\t\tmain.root,\t// observer\n\t\t\tObject.values(ViewportAnimated).map( e => { return e.ref }),\n\t\t\thandleViewportAnimated,\t// callback function\n\t\t\t['-20% 0px -20% 0px'],\n\t\t\t1\n\t\t);\n\t\tcreateObserver (\n\t\t\t'Navigation',\n\t\t\tmain.root,\t// observer\n\t\t\tSections.Nav.ref,\n\t\t\thandleNavigation,\t// callback function\n\t\t\t['0px 0px -99% 0px'],\n\t\t\t1\n\t\t);\n\n\t\t// window.onclick = e => {\n\t\t// \tconsole.log(e.target);\n\t\t// \tconsole.log(e.target.inerHtml)\n\t\t// }\n\t}, []);\n\n\treturn (\n\n\n\n\t\t\t<main className=\"App\" ref={ main.ref }>\n\t\t\t\t{/* <LandingContainer />\n\t\t\t\t<Navigation />\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<Anchor altClass=\"icon\"\n\t\t\t\t\t\tlink=\"none\"\n\t\t\t\t\t\tfileName=\"otlogo-white-simple.svg\"\n\t\t\t\t\t\tstyle={{ marginRight: 'auto', height: '2.4rem' }}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Button altClass=\"minimal lang\"\n\t\t\t\t\t\ttext=\"Eng.\"\n\t\t\t\t\t\tclicked={ '' }\n\t\t\t\t\t/>\n\t\t\t\t</header>\n\n\t\t\t\t<DoormatContainer />\n\t\t\t\t<NewsContainer />\n\t\t\t\t<GalleryContainer />\n\t\t\t\t<MenuContainer />\n\t\t\t\t<AboutContainer />\n\t\t\t\t<ContactContainer />\n\t\t\t\t<FooterContainer />\n\n\t\t\t\t<MediaViewer />\n\t\t\t\t<ModalWindow /> */}\n\t\t\t\t<Router>\n\t\t{ route ? <Redirect to={ route } /> : '' }\n\t\t \t<Route path=\"/\" component={ Home } />\n      \t<Route path=\"/gallery\" component={ GalleryPage } />\n\t\t</Router>\n\n\t\t\t</main>\n\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}