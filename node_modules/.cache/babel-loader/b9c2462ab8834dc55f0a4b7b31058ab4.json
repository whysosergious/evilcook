{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\webWork\\\\evilcook\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\n// import logo from './logo.svg';\nimport { useEffect, useRef } from 'react';\nimport './App.css';\nimport './AppGeneral.css';\nimport './animation.css';\nimport { Redirect, Route, BrowserRouter as Router } from \"react-router-dom\"; // zergski logic\n\nimport { useGlobalObj, globalObj, createObserver, queueFrame } from 'zergski-global';\nimport 'logic/zergski-content-manager';\nimport { routerHook, useRouterHook } from 'logic/router';\nimport Home from './Pages/Home'; // nav\n\nimport Navigation from './Navigation/Container'; // Page Sections\n\nimport LandingContainer from './Landing/Container';\nimport DoormatContainer from './Doormat/Container';\nimport NewsContainer from './News/Container';\nimport GalleryContainer from './Gallery/Container';\nimport MenuContainer from './Menu/Container';\nimport AboutContainer from './About/Container';\nimport ContactContainer from './Contact/Container';\nimport FooterContainer from './Footer/Container'; // Routed pages\n\nimport GalleryPage from 'Pages/Gallery/Container'; // Modals\n\nimport MediaViewer from 'modals/MediaViewer';\nimport ModalWindow from 'modals/Window'; // components\n\nimport Button from 'shared/Button';\nimport Anchor from 'shared/Anchor'; // zergski content manager\n// copying files before processing \n\nconst copycat = 'http://localhost/brokenOt/evilcook/src/fs/cat.php';\nconst _evilcook = {\n  /**\n   * @param {boolean} [ log ] : well, display the console log ofcourse \n   * <p>  \n   * @param {string , null} [ baseUrl ] : set if you have defined a 'baseUrl' in your jsconfig.json. setting to 'src is very handy, is recommended and will simply remove all './' from imports. null will replace them with '../' and is the simplest solution. if a custom 'url' is set, keep in mind to define the child directory ( i.e if set to 'src', but all your imports go through 'src/components', set baseUrl to 'components'.)\n   * </p>\n   */\n  options: {\n    log: true,\n    baseUrl: 'src'\n  }\n};\nconst {\n  baseUrl\n} = _evilcook.options;\n_evilcook.options.importPath = baseUrl === 'src' ? \"'\" : baseUrl === null ? \"'../\" : `'${baseUrl}/`;\n/**\n * We make copies of all imported and used components\n * @param {Array} list \n */\n\nasync function _zcmStart(list) {\n  const response = await fetch(copycat, {\n    method: \"POST\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(list)\n  });\n  const {\n    log,\n    content\n  } = await response.json();\n  _evilcook.options.log && log.forEach(entry => console.log(entry));\n  console.log(content);\n  content.forEach((component, index) => _processComponent(content, component, index));\n}\n\nfunction _processComponent(content, component, index) {\n  let {\n    importPath\n  } = _evilcook.options;\n  let {\n    code\n  } = content[index].data;\n  /**\n   * SOON =D\n   */\n  // content[index].data.code = component.data.code.replace(/'.\\//g, importPath);\n\n  let matches = code.match(/<A.*\\/>/g).map(res => {\n    return res.replace(/<|\\/|\\s+|>/g, '');\n  });\n  let imports = code.split('import');\n  imports.pop();\n  imports.forEach(line => matches.forEach((match, index) => console.log(line.includes(match), index)));\n  console.log(matches, imports);\n} // we start with index.js\n\n\nlet catArray = {\n  catArray: [{\n    path: 'root',\n    file: 'index.js'\n  }]\n};\n\n_zcmStart(catArray);\n/**\n * Assigned handler with a properties object\n * TODO!: Document props passed to this function and\n * send all of them separately\n * @param {*} props\n */\n\n\nconst handleNavigation = ({\n  entry,\n  observer\n}) => {\n  if (entry.target.zKey === 'Nav' && entry.isIntersecting) {\n    globalObj.Sections.Nav.setState({\n      sticky: 'stuck'\n    });\n  } else if (entry.target.zKey === 'Nav' && !entry.isIntersecting) {\n    globalObj.Sections.Nav.setState({\n      sticky: ''\n    });\n  }\n};\n\nconst handleViewportAnimated = ({\n  entry,\n  observer,\n  prevRatio\n}) => {\n  // console.log(entry.target.zKey, entry.isIntersecting)\n  if (entry.isIntersecting) {\n    queueFrame(() => {\n      entry.target.zEl.setState('');\n    });\n    observer.unobserve(entry.target);\n  }\n};\n\nconst App = () => {\n  _s();\n\n  const [route] = useRouterHook(null);\n  const main = {\n    root: useRef(null),\n    ref: useRef(null)\n  };\n  useEffect(() => {\n    // for the global object to be accessible through import, it has to be initialized\n    // after a 'componentDidMount' or 'useEffect' in that component\n    const {\n      Sections,\n      ViewportAnimated\n    } = globalObj;\n    globalObj.Sections.Nav.current = 0;\n    main.ref = main.ref.current;\n    main.root = main.ref.parentElement;\n    globalObj.main = main; // all you need to create an intersectionObserver\n    // a reference of to the observer, in our case\n    // the root element\n\n    createObserver('ViewportAnimation', main.root, // observer\n    Object.values(ViewportAnimated).map(e => {\n      return e.ref;\n    }), handleViewportAnimated, // callback function\n    ['-20% 0px -20% 0px'], 1);\n    createObserver('Navigation', main.root, // observer\n    Sections.Nav.ref, handleNavigation, // callback function\n    ['0px 0px -99% 0px'], 1); // window.onclick = e => {\n    // \tconsole.log(e.target);\n    // \tconsole.log(e.target.inerHtml)\n    // }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    ref: main.ref,\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [route ? /*#__PURE__*/_jsxDEV(Redirect, {\n        to: route\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }, this) : '', /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/gallery\",\n        component: GalleryPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 4\n  }, this);\n};\n\n_s(App, \"k9i5lRjd7j/W46QiWGg1m8jA2S8=\", false, function () {\n  return [useRouterHook];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/webWork/evilcook/src/App.js"],"names":["useEffect","useRef","Redirect","Route","BrowserRouter","Router","useGlobalObj","globalObj","createObserver","queueFrame","routerHook","useRouterHook","Home","Navigation","LandingContainer","DoormatContainer","NewsContainer","GalleryContainer","MenuContainer","AboutContainer","ContactContainer","FooterContainer","GalleryPage","MediaViewer","ModalWindow","Button","Anchor","copycat","_evilcook","options","log","baseUrl","importPath","_zcmStart","list","response","fetch","method","headers","body","JSON","stringify","content","json","forEach","entry","console","component","index","_processComponent","code","data","matches","match","map","res","replace","imports","split","pop","line","includes","catArray","path","file","handleNavigation","observer","target","zKey","isIntersecting","Sections","Nav","setState","sticky","handleViewportAnimated","prevRatio","zEl","unobserve","App","route","main","root","ref","ViewportAnimated","current","parentElement","Object","values","e"],"mappings":"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","sourcesContent":["// import logo from './logo.svg';\nimport { useEffect, useRef } from 'react';\nimport './App.css';\nimport './AppGeneral.css';\nimport './animation.css';\nimport { Redirect, Route, BrowserRouter as Router } from \"react-router-dom\";\n\n// zergski logic\nimport { useGlobalObj, globalObj, createObserver, queueFrame } from 'zergski-global';\nimport 'logic/zergski-content-manager';\nimport { routerHook, useRouterHook } from 'logic/router';\n\nimport Home from './Pages/Home';\n\n// nav\nimport Navigation from './Navigation/Container';\n\n// Page Sections\nimport LandingContainer from './Landing/Container';\nimport DoormatContainer from './Doormat/Container';\nimport NewsContainer from './News/Container';\nimport GalleryContainer from './Gallery/Container';\nimport MenuContainer from './Menu/Container';\nimport AboutContainer from './About/Container';\nimport ContactContainer from './Contact/Container';\nimport FooterContainer from './Footer/Container';\n\n// Routed pages\nimport GalleryPage from 'Pages/Gallery/Container';\n\n// Modals\nimport MediaViewer from 'modals/MediaViewer';\nimport ModalWindow from 'modals/Window';\n\n// components\nimport Button from 'shared/Button';\nimport Anchor from 'shared/Anchor';\n\n\n// zergski content manager\n// copying files before processing \nconst copycat = 'http://localhost/brokenOt/evilcook/src/fs/cat.php';\n\nconst _evilcook = {\n\t/**\n\t * @param {boolean} [ log ] : well, display the console log ofcourse \n\t * <p>  \n\t * @param {string , null} [ baseUrl ] : set if you have defined a 'baseUrl' in your jsconfig.json. setting to 'src is very handy, is recommended and will simply remove all './' from imports. null will replace them with '../' and is the simplest solution. if a custom 'url' is set, keep in mind to define the child directory ( i.e if set to 'src', but all your imports go through 'src/components', set baseUrl to 'components'.)\n\t * </p>\n\t */\n\toptions: {\n\t\tlog: true,\n\t\tbaseUrl: 'src',\n\t}\n}\nconst { baseUrl } = _evilcook.options;\n_evilcook.options.importPath = baseUrl === 'src' ? \"'\" : baseUrl === null ? \"'../\" : `'${baseUrl}/` ;\n\n/**\n * We make copies of all imported and used components\n * @param {Array} list \n */\nasync function _zcmStart( list ) {\n\n\tconst response = await fetch(\n\t\tcopycat,\n\t\t{\n\t\t\tmethod: \"POST\",\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(list),\n\t\t}\n\t);\n\tconst { log, content } = await response.json();\n\n\t_evilcook.options.log && log.forEach( entry => console.log(entry));\n\tconsole.log(content);\n\tcontent.forEach( ( component, index ) => _processComponent( content, component, index ))\n}\n\nfunction _processComponent( content, component, index ) {\n\tlet { importPath } = _evilcook.options;\n\tlet { code } = content[index].data;\n\t/**\n\t * SOON =D\n\t */\n\t// content[index].data.code = component.data.code.replace(/'.\\//g, importPath);\n\n\n\tlet matches = code.match(/<A.*\\/>/g).map( res => { return res.replace(/<|\\/|\\s+|>/g, '') });\n\tlet imports = code.split('import');\n\timports.pop();\n\timports.forEach( line => matches.forEach( ( match, index ) => console.log( line.includes(match), index )));\n\tconsole.log(matches, imports);\n\n}\n\n// we start with index.js\nlet catArray = { catArray: [{ path: 'root', file: 'index.js' }] };\n\n_zcmStart( catArray );\n\n/**\n * Assigned handler with a properties object\n * TODO!: Document props passed to this function and\n * send all of them separately\n * @param {*} props\n */\nconst handleNavigation = ({ entry, observer }) => {\n\tif ( entry.target.zKey === 'Nav' && entry.isIntersecting ) {\n\t\tglobalObj.Sections.Nav.setState({ sticky: 'stuck' });\n\t} else if ( entry.target.zKey === 'Nav' && !entry.isIntersecting ) {\n\t\tglobalObj.Sections.Nav.setState({ sticky: '' });\n\t}\n}\n\nconst handleViewportAnimated = ({ entry, observer, prevRatio }) => {\n\t// console.log(entry.target.zKey, entry.isIntersecting)\n\tif ( entry.isIntersecting ) {\n\t\tqueueFrame(() => {\n\t\t\tentry.target.zEl.setState( '' );\n\t\t});\n\t\tobserver.unobserve( entry.target );\n\t}\n}\n\nconst App = () => {\n\tconst [ route ] = useRouterHook(null);\n\n\tconst main = {\n\t\troot: useRef(null),\n\t\tref: useRef(null),\n\t}\n\n\tuseEffect(() => {\n\t\t// for the global object to be accessible through import, it has to be initialized\n\t\t// after a 'componentDidMount' or 'useEffect' in that component\n\t\tconst { Sections, ViewportAnimated } = globalObj;\n\t\tglobalObj.Sections.Nav.current = 0;\n\t\tmain.ref = main.ref.current;\n\t\tmain.root = main.ref.parentElement;\n\t\tglobalObj.main = main;\n\t\t// all you need to create an intersectionObserver\n\t\t// a reference of to the observer, in our case\n\t\t// the root element\n\t\tcreateObserver (\n\t\t\t'ViewportAnimation',\n\t\t\tmain.root,\t// observer\n\t\t\tObject.values(ViewportAnimated).map( e => { return e.ref }),\n\t\t\thandleViewportAnimated,\t// callback function\n\t\t\t['-20% 0px -20% 0px'],\n\t\t\t1\n\t\t);\n\t\tcreateObserver (\n\t\t\t'Navigation',\n\t\t\tmain.root,\t// observer\n\t\t\tSections.Nav.ref,\n\t\t\thandleNavigation,\t// callback function\n\t\t\t['0px 0px -99% 0px'],\n\t\t\t1\n\t\t);\n\n\t\t// window.onclick = e => {\n\t\t// \tconsole.log(e.target);\n\t\t// \tconsole.log(e.target.inerHtml)\n\t\t// }\n\t}, []);\n\n\treturn (\n\n\n\n\t\t\t<main className=\"App\" ref={ main.ref }>\n\t\t\t\t{/* <LandingContainer />\n\t\t\t\t<Navigation />\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t<Anchor altClass=\"icon\"\n\t\t\t\t\t\tlink=\"none\"\n\t\t\t\t\t\tfileName=\"otlogo-white-simple.svg\"\n\t\t\t\t\t\tstyle={{ marginRight: 'auto', height: '2.4rem' }}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Button altClass=\"minimal lang\"\n\t\t\t\t\t\ttext=\"Eng.\"\n\t\t\t\t\t\tclicked={ '' }\n\t\t\t\t\t/>\n\t\t\t\t</header>\n\n\t\t\t\t<DoormatContainer />\n\t\t\t\t<NewsContainer />\n\t\t\t\t<GalleryContainer />\n\t\t\t\t<MenuContainer />\n\t\t\t\t<AboutContainer />\n\t\t\t\t<ContactContainer />\n\t\t\t\t<FooterContainer />\n\n\t\t\t\t<MediaViewer />\n\t\t\t\t<ModalWindow /> */}\n\t\t\t\t<Router>\n\t\t{ route ? <Redirect to={ route } /> : '' }\n\t\t \t<Route path=\"/\" component={ Home } />\n      \t<Route path=\"/gallery\" component={ GalleryPage } />\n\t\t</Router>\n\n\t\t\t</main>\n\n\t);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}